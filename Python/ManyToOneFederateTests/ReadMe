Created on Dec 20
@kris756

<<<<<<< HEAD
This script describes the logic to run this many to one federate simulation using python API and commands to run.

=======
>>>>>>> 77ba36b1228ddd5f70d6d045f97316c457e98614
This test co-simulates a sender and an echoer script.
Multiple senders publish messages (a variable) to one echoer and the echoer publishes back the messages received to the corresponding sender.

There are multiple variables involved in this process:
  1. the number of senders
  2. the number of messages per sender
  3. the number of bytes per message per sender
  4. the update interval (timeDelta) of the helics co-simulation
  5. the stop-time of the co-simulation
  6. the core-type used (ZMQ, TCP, UDP, IP, MPI)
These inputs are passed as arguments in creating the JSON configuration script.

Running the Json_create.py returns,
1.	 the JSON files to create the HELICS federates and 
2.	 config_runner.json script that is used by helics runner. This file for now is saved in the log_files folder
Command to run this script : python Json_create.py 1 1 1 10 30 zmq (the arguments are sequentially : number of senders, number of messages/federate, number of bytes/message, timeDelta, time_stop, coreType)

HELICS uses these JSON scripts to create the federate.

Then you can run this command to start the helics runner and record ubuntu time for the simulation: 
   time -p helics run --path  (This is the path to your config_runner.json script in the log_files folder).
